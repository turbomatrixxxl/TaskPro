{"version":3,"file":"static/js/973.b251ac65.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/useToggle.js","hooks/validateRegister.js","hooks/usePasswordStrength.js","webpack://my-react-app/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://my-react-app/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/index.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { useState } from \"react\";\n\nconst useFormTouched = (initialState = {}) => {\n  const [touched, setTouched] = useState(\n    Object.keys(initialState).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {})\n  );\n\n  const handleBlur = (field) => () => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  return {\n    touched,\n    handleBlur,\n  };\n};\n\nexport default useFormTouched;\n","import { useState } from \"react\";\n\nconst useFormValidation = (initialState, validateFn) => {\n  const [fields, setFields] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const validateFields = () => {\n    const newErrors = validateFn(fields);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return {\n    fields,\n    setFields,\n    errors,\n    validateFields,\n  };\n};\n\nexport default useFormValidation;\n","import { useState } from \"react\";\n\nexport default function useToggle(initialValue) {\n    const [isOpen, setIsOpen] = useState(initialValue);\n\n    function toggle() {\n        setIsOpen(!isOpen);\n    }\n\n    return [isOpen, toggle];\n}\n","const validateRegister = (fields) => {\n    const newErrors = {};\n    if (!fields.username) {\n        newErrors.username = \"Username is required\";\n    }\n    if (fields.password.length < 6) {\n        newErrors.password = \"Password must be at least 6 characters!\";\n    }\n    if (!fields.email) {\n        newErrors.email = \"Email is required\";\n    }\n    if (!fields.password) {\n        newErrors.password = \"Password is required\";\n    }\n\n    return newErrors;\n};\n\nexport default validateRegister;\n","import { useState, useEffect } from \"react\";\n\nconst usePasswordStrength = (password) => {\n  const [strength, setStrength] = useState(0);\n\n  useEffect(() => {\n    const calculatePasswordStrength = (password) => {\n      let strength = 0;\n\n      if (password.length > 7) strength += 1;\n      if (password.length > 10) strength += 1;\n      if (/[A-Z]/.test(password)) strength += 1;\n      if (/[0-9]/.test(password)) strength += 1;\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n\n      return strength;\n    };\n\n    setStrength(calculatePasswordStrength(password));\n  }, [password]);\n\n  return strength;\n};\n\nexport default usePasswordStrength;\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"RegisterForm_cont__q34GH\",\"linkContainer\":\"RegisterForm_linkContainer__Sxc8O\",\"navLinkTitle\":\"RegisterForm_navLinkTitle__bcssD\",\"login\":\"RegisterForm_login__IQBky\",\"form\":\"RegisterForm_form__Tv43W\",\"inputs\":\"RegisterForm_inputs__Wb7ho\",\"inputWrapper\":\"RegisterForm_inputWrapper__63Rq3\",\"inputError\":\"RegisterForm_inputError__c6zsh\",\"eyeIcon\":\"RegisterForm_eyeIcon__PZ59+\",\"input\":\"RegisterForm_input__FsgBz\",\"error\":\"RegisterForm_error__yDHjz\",\"buttonsContainer\":\"RegisterForm_buttonsContainer__WBAxD\",\"passwordStrengthBar\":\"RegisterForm_passwordStrengthBar__1CK-9\",\"passwordStrengthIndicator\":\"RegisterForm_passwordStrengthIndicator__Ce9Eh\"};","import React, { useState } from \"react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operationsAuth\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\n\nimport useToggle from \"../../hooks/useToggle\";\nimport useFormValidation from \"../../hooks/useFormValidation\";\nimport validateRegister from \"../../hooks/validateRegister\";\nimport useFormTouched from \"../../hooks/useFormTouched\";\nimport usePasswordStrength from \"../../hooks/usePasswordStrength\";\n\nimport styles from \"./RegisterForm.module.css\";\n\nfunction RegisterForm() {\n  const { fields, setFields, validateFields } = useFormValidation(\n    {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n    },\n    validateRegister\n  );\n\n  const { touched, handleBlur } = useFormTouched();\n  const passwordStrength = usePasswordStrength(fields.password);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [type, setType] = useState(\"password\");\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\n\n  const [confirmType, setConfirmType] = useState(\"password\");\n  const [confirmEyeVisible, toggleConfirmEyeVisible] = useToggle(true);\n  const [confirmClosedEyeVisible, toggleConfirmClosedEyeVisible] =\n    useToggle(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!validateFields()) return;\n\n    const { passwordConfirm, ...fieldsWithoutPasswordConfirm } = fields;\n\n    dispatch(register(fieldsWithoutPasswordConfirm))\n      .unwrap()\n      .then(() => {\n        setFields({\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n        });\n        toast.success(\"Registration successful!\");\n      })\n      .catch((err) => {\n        console.error(err);\n        setErrorMessage(\"Account with this email already exists.\");\n        toast.error(\"Account with this email already exists.\");\n      });\n  };\n\n  return (\n    <div className={styles.cont}>\n      <div className={styles.linkContainer}>\n        <p className={styles.login}>Registration</p>\n\n        <Link to=\"/auth/login\" className={styles.navLinkTitle}>\n          Log In\n        </Link>\n      </div>\n\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <div className={styles.inputs}>\n          <div className={styles.inputContainer}>\n            <div className={styles.inputWrapper}>\n              <Input\n                autoComplete=\"on\"\n                paddingLeft=\"18px\"\n                width=\"100%\"\n                type={\"text\"}\n                value={fields.username}\n                handleChange={(e) => {\n                  setFields({ ...fields, username: e.target.value });\n                }}\n                handleBlur={handleBlur(\"username\")}\n                placeholder=\"Name\"\n                required={true}\n              />\n            </div>\n            {touched.username && !fields.username && (\n              <p className={styles.inputError}>Required</p>\n            )}\n          </div>\n\n          <div className={styles.inputContainer}>\n            <div className={styles.inputWrapper}>\n              <Input\n                autoComplete=\"on\"\n                paddingLeft=\"18px\"\n                width=\"100%\"\n                type=\"email\"\n                value={fields.email}\n                handleChange={(e) => {\n                  setFields({ ...fields, email: e.target.value });\n                }}\n                handleBlur={handleBlur(\"email\")}\n                placeholder=\"E-mail\"\n                required={true}\n              />\n            </div>\n            {touched.email && !fields.email && (\n              <p className={styles.inputError}>Required</p>\n            )}\n          </div>\n\n          <div className={styles.inputContainer}>\n            <div className={styles.inputWrapper}>\n              {eyeVisible && (\n                <VscEye\n                  onClick={() => {\n                    toggleEyeVisible();\n                    toggleClosedEyeVisible();\n                    setType(\"text\");\n                  }}\n                  size=\"24px\"\n                  className={styles.eyeIcon}\n                />\n              )}\n              {closedEyeVisible && (\n                <VscEyeClosed\n                  onClick={() => {\n                    toggleEyeVisible();\n                    toggleClosedEyeVisible();\n                    setType(\"password\");\n                  }}\n                  size=\"24px\"\n                  className={styles.eyeIcon}\n                />\n              )}\n              <Input\n                autoComplete=\"on\"\n                paddingLeft=\"18px\"\n                width=\"100%\"\n                type={type}\n                value={fields.password}\n                handleChange={(e) => {\n                  setFields({ ...fields, password: e.target.value });\n                }}\n                handleBlur={handleBlur(\"password\")}\n                placeholder=\"Password\"\n                required={true}\n              />\n            </div>\n            {touched.password && !fields.password && (\n              <p className={styles.inputError}>Required</p>\n            )}\n          </div>\n\n          <div className={styles.inputContainer}>\n            <div className={styles.inputWrapper}>\n              {confirmEyeVisible && (\n                <VscEye\n                  onClick={() => {\n                    toggleConfirmEyeVisible();\n                    toggleConfirmClosedEyeVisible();\n                    setConfirmType(\"text\");\n                  }}\n                  size=\"24px\"\n                  className={styles.eyeIcon}\n                />\n              )}\n              {confirmClosedEyeVisible && (\n                <VscEyeClosed\n                  onClick={() => {\n                    toggleConfirmEyeVisible();\n                    toggleConfirmClosedEyeVisible();\n                    setConfirmType(\"password\");\n                  }}\n                  size=\"24px\"\n                  className={styles.eyeIcon}\n                />\n              )}\n              <Input\n                autoComplete=\"on\"\n                paddingLeft=\"18px\"\n                width=\"100%\"\n                type={confirmType}\n                value={fields.passwordConfirm}\n                handleChange={(e) =>\n                  setFields({ ...fields, passwordConfirm: e.target.value })\n                }\n                handleBlur={handleBlur(\"passwordConfirm\")}\n                placeholder=\"Confirm Password\"\n                required={true}\n              />\n            </div>\n            {touched.passwordConfirm && !fields.passwordConfirm && (\n              <p className={styles.inputError}>Required</p>\n            )}\n            {touched.passwordConfirm &&\n              fields.password !== fields.passwordConfirm && (\n                <p className={styles.inputError}>Passwords must match</p>\n              )}\n          </div>\n          <div className={styles.passwordStrengthBar}>\n            <div\n              className={styles.passwordStrengthIndicator}\n              style={{\n                width: `${(passwordStrength / 5) * 100}%`,\n                backgroundColor:\n                  passwordStrength < 3\n                    ? \"red\"\n                    : passwordStrength < 4\n                    ? \"orange\"\n                    : \"green\",\n              }}></div>\n          </div>\n        </div>\n        <div className={styles.buttonsContainer}>\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n\n          <Button variant=\"auth\" type=\"submit\">\n            Register Now\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__GPz-D\"};","import RegisterPage from './RegisterPage.jsx'\n\nexport default RegisterPage","import React from \"react\";\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\n\nimport styles from \"./RegisterPage.module.css\";\n\nexport default function RegisterPage() {\n  return (\n    <section className={styles.section}>\n      <RegisterForm />\n    </section>\n  );\n}\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","_objectSpread","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","useToggle","initialValue","isOpen","setIsOpen","username","password","email","strength","setStrength","useEffect","test","calculatePasswordStrength","passwordConfirm","validateRegister","useFormTouched","passwordStrength","usePasswordStrength","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","closedEyeVisible","toggleClosedEyeVisible","confirmType","setConfirmType","confirmEyeVisible","toggleConfirmEyeVisible","confirmClosedEyeVisible","toggleConfirmClosedEyeVisible","_jsxs","cont","linkContainer","login","Link","to","navLinkTitle","form","onSubmit","e","preventDefault","fieldsWithoutPasswordConfirm","_objectWithoutProperties","_excluded","register","unwrap","then","toast","success","catch","err","console","error","inputs","inputWrapper","target","inputError","VscEye","onClick","size","eyeIcon","VscEyeClosed","passwordStrengthBar","passwordStrengthIndicator","concat","backgroundColor","buttonsContainer","Button","RegisterForm"],"sourceRoot":""}