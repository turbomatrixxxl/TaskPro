{"version":3,"file":"static/js/973.23559de9.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/useToggle.js","hooks/validateRegister.js","hooks/usePasswordStrength.js","webpack://my-react-app/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://my-react-app/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/index.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__0KQEs\",\"inputCenter\":\"Input_inputCenter__1T9Uh\",\"inputInfo\":\"Input_inputInfo__A3dUh\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n","import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue) {\r\n    const [isOpen, setIsOpen] = useState(initialValue);\r\n\r\n    function toggle() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return [isOpen, toggle];\r\n}\r\n","const validateRegister = (fields) => {\r\n    const newErrors = {};\r\n    if (!fields.username) {\r\n        newErrors.username = \"Username is required\";\r\n    }\r\n    if (fields.password.length < 6) {\r\n        newErrors.password = \"Password must be at least 6 characters!\";\r\n    }\r\n    if (!fields.email) {\r\n        newErrors.email = \"Email is required\";\r\n    }\r\n    if (!fields.password) {\r\n        newErrors.password = \"Password is required\";\r\n    }\r\n\r\n    return newErrors;\r\n};\r\n\r\nexport default validateRegister;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst usePasswordStrength = (password) => {\r\n  const [strength, setStrength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculatePasswordStrength = (password) => {\r\n      let strength = 0;\r\n\r\n      if (password.length > 7) strength += 1;\r\n      if (password.length > 10) strength += 1;\r\n      if (/[A-Z]/.test(password)) strength += 1;\r\n      if (/[0-9]/.test(password)) strength += 1;\r\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n\r\n      return strength;\r\n    };\r\n\r\n    setStrength(calculatePasswordStrength(password));\r\n  }, [password]);\r\n\r\n  return strength;\r\n};\r\n\r\nexport default usePasswordStrength;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"RegisterForm_cont__rUmG5\",\"linkContainer\":\"RegisterForm_linkContainer__DHW1j\",\"navLinkTitle\":\"RegisterForm_navLinkTitle__gHf-N\",\"login\":\"RegisterForm_login__0TAsR\",\"form\":\"RegisterForm_form__bQBfy\",\"inputs\":\"RegisterForm_inputs__LTISR\",\"inputWrapper\":\"RegisterForm_inputWrapper__Fu+zG\",\"inputError\":\"RegisterForm_inputError__GovNl\",\"eyeIcon\":\"RegisterForm_eyeIcon__m0U0-\",\"input\":\"RegisterForm_input__7mj+G\",\"error\":\"RegisterForm_error__jtfEA\",\"buttonsContainer\":\"RegisterForm_buttonsContainer__8+pIc\",\"passwordStrengthBar\":\"RegisterForm_passwordStrengthBar__4ZLP2\",\"passwordStrengthIndicator\":\"RegisterForm_passwordStrengthIndicator__x8gwR\"};","import React, { useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\n\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateRegister from \"../../hooks/validateRegister\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\nimport usePasswordStrength from \"../../hooks/usePasswordStrength\";\r\n\r\nimport styles from \"./RegisterForm.module.css\";\r\n\r\nfunction RegisterForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    },\r\n    validateRegister\r\n  );\r\n\r\n  const { touched, handleBlur } = useFormTouched();\r\n  const passwordStrength = usePasswordStrength(fields.password);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n\r\n  const [confirmType, setConfirmType] = useState(\"password\");\r\n  const [confirmEyeVisible, toggleConfirmEyeVisible] = useToggle(true);\r\n  const [confirmClosedEyeVisible, toggleConfirmClosedEyeVisible] =\r\n    useToggle(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFields()) return;\r\n\r\n    const { passwordConfirm, ...fieldsWithoutPasswordConfirm } = fields;\r\n\r\n    dispatch(register(fieldsWithoutPasswordConfirm))\r\n      .unwrap()\r\n      .then(() => {\r\n        setFields({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        });\r\n        toast.success(\"Registration successful!\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setErrorMessage(\"Account with this email already exists.\");\r\n        toast.error(\"Account with this email already exists.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.linkContainer}>\r\n        <p className={styles.login}>Registration</p>\r\n\r\n        <Link to=\"/auth/login\" className={styles.navLinkTitle}>\r\n          Log In\r\n        </Link>\r\n      </div>\r\n\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <div className={styles.inputs}>\r\n          <div className={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n              <Input\r\n                autoComplete=\"on\"\r\n                paddingLeft=\"18px\"\r\n                width=\"100%\"\r\n                type={\"text\"}\r\n                value={fields.username}\r\n                handleChange={(e) => {\r\n                  setFields({ ...fields, username: e.target.value });\r\n                }}\r\n                handleBlur={handleBlur(\"username\")}\r\n                placeholder=\"Name\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            {touched.username && !fields.username && (\r\n              <p className={styles.inputError}>Required</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n              <Input\r\n                autoComplete=\"on\"\r\n                paddingLeft=\"18px\"\r\n                width=\"100%\"\r\n                type=\"email\"\r\n                value={fields.email}\r\n                handleChange={(e) => {\r\n                  setFields({ ...fields, email: e.target.value });\r\n                }}\r\n                handleBlur={handleBlur(\"email\")}\r\n                placeholder=\"E-mail\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            {touched.email && !fields.email && (\r\n              <p className={styles.inputError}>Required</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n              {eyeVisible && (\r\n                <VscEye\r\n                  onClick={() => {\r\n                    toggleEyeVisible();\r\n                    toggleClosedEyeVisible();\r\n                    setType(\"text\");\r\n                  }}\r\n                  size=\"24px\"\r\n                  className={styles.eyeIcon}\r\n                />\r\n              )}\r\n              {closedEyeVisible && (\r\n                <VscEyeClosed\r\n                  onClick={() => {\r\n                    toggleEyeVisible();\r\n                    toggleClosedEyeVisible();\r\n                    setType(\"password\");\r\n                  }}\r\n                  size=\"24px\"\r\n                  className={styles.eyeIcon}\r\n                />\r\n              )}\r\n              <Input\r\n                autoComplete=\"on\"\r\n                paddingLeft=\"18px\"\r\n                width=\"100%\"\r\n                type={type}\r\n                value={fields.password}\r\n                handleChange={(e) => {\r\n                  setFields({ ...fields, password: e.target.value });\r\n                }}\r\n                handleBlur={handleBlur(\"password\")}\r\n                placeholder=\"Password\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            {touched.password && !fields.password && (\r\n              <p className={styles.inputError}>Required</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n              {confirmEyeVisible && (\r\n                <VscEye\r\n                  onClick={() => {\r\n                    toggleConfirmEyeVisible();\r\n                    toggleConfirmClosedEyeVisible();\r\n                    setConfirmType(\"text\");\r\n                  }}\r\n                  size=\"24px\"\r\n                  className={styles.eyeIcon}\r\n                />\r\n              )}\r\n              {confirmClosedEyeVisible && (\r\n                <VscEyeClosed\r\n                  onClick={() => {\r\n                    toggleConfirmEyeVisible();\r\n                    toggleConfirmClosedEyeVisible();\r\n                    setConfirmType(\"password\");\r\n                  }}\r\n                  size=\"24px\"\r\n                  className={styles.eyeIcon}\r\n                />\r\n              )}\r\n              <Input\r\n                autoComplete=\"on\"\r\n                paddingLeft=\"18px\"\r\n                width=\"100%\"\r\n                type={confirmType}\r\n                value={fields.passwordConfirm}\r\n                handleChange={(e) =>\r\n                  setFields({ ...fields, passwordConfirm: e.target.value })\r\n                }\r\n                handleBlur={handleBlur(\"passwordConfirm\")}\r\n                placeholder=\"Confirm Password\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            {touched.passwordConfirm && !fields.passwordConfirm && (\r\n              <p className={styles.inputError}>Required</p>\r\n            )}\r\n            {touched.passwordConfirm &&\r\n              fields.password !== fields.passwordConfirm && (\r\n                <p className={styles.inputError}>Passwords must match</p>\r\n              )}\r\n          </div>\r\n          <div className={styles.passwordStrengthBar}>\r\n            <div\r\n              className={styles.passwordStrengthIndicator}\r\n              style={{\r\n                width: `${(passwordStrength / 5) * 100}%`,\r\n                backgroundColor:\r\n                  passwordStrength < 3\r\n                    ? \"red\"\r\n                    : passwordStrength < 4\r\n                    ? \"orange\"\r\n                    : \"green\",\r\n              }}></div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.buttonsContainer}>\r\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n\r\n          <Button variant=\"auth\" type=\"submit\">\r\n            Register Now\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__AHaDb\"};","import RegisterPage from './RegisterPage.jsx'\r\n\r\nexport default RegisterPage","import React from \"react\";\r\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\r\n\r\nimport styles from \"./RegisterPage.module.css\";\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <section className={styles.section}>\r\n      <RegisterForm />\r\n    </section>\r\n  );\r\n}\r\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","useToggle","initialValue","isOpen","setIsOpen","username","password","email","strength","setStrength","useEffect","test","calculatePasswordStrength","passwordConfirm","validateRegister","useFormTouched","passwordStrength","usePasswordStrength","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","closedEyeVisible","toggleClosedEyeVisible","confirmType","setConfirmType","confirmEyeVisible","toggleConfirmEyeVisible","confirmClosedEyeVisible","toggleConfirmClosedEyeVisible","_jsxs","cont","linkContainer","login","Link","to","navLinkTitle","form","onSubmit","e","preventDefault","fieldsWithoutPasswordConfirm","register","unwrap","then","toast","success","catch","err","console","error","inputs","inputWrapper","target","inputError","VscEye","onClick","size","eyeIcon","VscEyeClosed","passwordStrengthBar","passwordStrengthIndicator","backgroundColor","buttonsContainer","Button","RegisterForm"],"sourceRoot":""}