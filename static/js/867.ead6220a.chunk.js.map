{"version":3,"file":"static/js/867.ead6220a.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/useToggle.js","hooks/validateLogin.js","webpack://my-react-app/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://my-react-app/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { useState } from \"react\";\n\nconst useFormTouched = (initialState = {}) => {\n  const [touched, setTouched] = useState(\n    Object.keys(initialState).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {})\n  );\n\n  const handleBlur = (field) => () => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  return {\n    touched,\n    handleBlur,\n  };\n};\n\nexport default useFormTouched;\n","import { useState } from \"react\";\n\nconst useFormValidation = (initialState, validateFn) => {\n  const [fields, setFields] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const validateFields = () => {\n    const newErrors = validateFn(fields);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return {\n    fields,\n    setFields,\n    errors,\n    validateFields,\n  };\n};\n\nexport default useFormValidation;\n","import { useState } from \"react\";\n\nexport default function useToggle(initialValue) {\n    const [isOpen, setIsOpen] = useState(initialValue);\n\n    function toggle() {\n        setIsOpen(!isOpen);\n    }\n\n    return [isOpen, toggle];\n}\n","const validateLogin = (fields) => {\n    const errors = {};\n    if (!fields.email) {\n        errors.email = \"Email is required\";\n    }\n    if (!fields.password) {\n        errors.password = \"Password is required\";\n    }\n    return errors;\n};\n\nexport default validateLogin;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"cont\":\"LoginForm_cont__7yWLf\",\"linkContainer\":\"LoginForm_linkContainer__tVAZX\",\"navLinkTitle\":\"LoginForm_navLinkTitle__zT9nb\",\"login\":\"LoginForm_login__RKJaD\",\"inputsCont\":\"LoginForm_inputsCont__Or85F\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"inputError\":\"LoginForm_inputError__cPf0D\",\"eyeIcon\":\"LoginForm_eyeIcon__UzGhv\",\"errorCont\":\"LoginForm_errorCont__MHL+1\",\"error\":\"LoginForm_error__012y+\",\"buttonsContainer\":\"LoginForm_buttonsContainer__bkTpy\",\"button\":\"LoginForm_button__LodJg\",\"navLink\":\"LoginForm_navLink__gt1T+\"};","import React, { useState } from \"react\";\nimport { logIn } from \"../../redux/auth/operationsAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\nimport useToggle from \"../../hooks/useToggle\";\nimport useFormValidation from \"../../hooks/useFormValidation\";\nimport validateLogin from \"../../hooks/validateLogin\";\nimport useFormTouched from \"../../hooks/useFormTouched\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n// import clsx from \"clsx\";\n\nimport { toast } from \"react-toastify\"; // Import toast and ToastContainer\nimport \"react-toastify/dist/ReactToastify.css\"; // Import styles\n\nimport styles from \"./LoginForm.module.css\";\n\nfunction LoginForm() {\n  const { fields, setFields, validateFields } = useFormValidation(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    validateLogin\n  );\n\n  const navigate = useNavigate();\n\n  const { user, isLoggedIn } = useAuth();\n\n  const { touched, handleBlur } = useFormTouched(fields);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [type, setType] = useState(\"password\");\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateFields()) return;\n\n    try {\n      await dispatch(logIn(fields)).unwrap();\n\n      // Show success toast message after successful login\n      toast.success(\"Login successful!\", {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (error) {\n      setFields((prevFields) => ({\n        ...prevFields,\n        errorMessage: setErrorMessage(\n          \"You have entered an invalid username or password.\"\n        ),\n      }));\n    }\n  };\n\n  const isFormValid = fields.email.trim() !== \"\" && fields.password.length >= 6;\n\n  return (\n    <div className={styles.cont}>\n      <div className={styles.linkContainer}>\n        <Link to=\"/auth/register\" className={styles.navLinkTitle}>\n          Registration\n        </Link>\n\n        <p className={styles.login}>Log In</p>\n      </div>\n\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.inputsCont}>\n          <div className={styles.inputContainer}>\n            <div className={styles.inputWrapper}>\n              <Input\n                autoComplete=\"on\"\n                paddingLeft=\"18px\"\n                width=\"100%\"\n                type=\"email\"\n                value={fields.email}\n                handleChange={(e) => {\n                  setFields({ ...fields, email: e.target.value });\n                }}\n                handleBlur={handleBlur(\"email\")}\n                placeholder=\"Enter your email\"\n                required={true}\n              />\n            </div>\n            {touched.email && !fields.email && (\n              <p className={styles.inputError}>Required</p>\n            )}\n          </div>\n\n          <div styles={styles.inputContainer}>\n            <div className={styles.inputWrapper}>\n              {eyeVisible && (\n                <VscEye\n                  onClick={() => {\n                    toggleEyeVisible();\n                    toggleClosedEyeVisible();\n                    setType(\"text\");\n                    console.log(\"click\");\n                  }}\n                  size=\"24px\"\n                  className={styles.eyeIcon}\n                />\n              )}\n              {closedEyeVisible && (\n                <VscEyeClosed\n                  onClick={() => {\n                    toggleEyeVisible();\n                    toggleClosedEyeVisible();\n                    setType(\"password\");\n                  }}\n                  size=\"24px\"\n                  className={styles.eyeIcon}\n                />\n              )}\n              <Input\n                autoComplete=\"on\"\n                paddingLeft=\"14px\"\n                width=\"100%\"\n                type={type}\n                value={fields.password}\n                handleChange={(e) => {\n                  setFields({ ...fields, password: e.target.value });\n                }}\n                handleBlur={handleBlur(\"password\")}\n                placeholder=\"Password\"\n                required={true}\n              />\n            </div>\n            {touched.password && fields.password.length < 6 && (\n              <p className={styles.inputError}>\n                Password must be at least 6 characters!\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.buttonsContainer}>\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n\n          <Button disabled={!isFormValid} variant=\"auth\" type=\"submit\">\n            Login\n          </Button>\n        </div>\n\n        {user !== null && !isLoggedIn && (\n          <div className={styles.errorCont}>\n            <p className={styles.error}>\n              It seems that your authorisation token expired for security resons\n              or your email is not verified! Please click Login button or Verify\n              button if email not verified !\n            </p>\n            <Button\n              variant=\"auth\"\n              handleClick={() => {\n                navigate(\"/verify-email\");\n              }}>\n              Verify\n            </Button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__pqfrr\"};","import LoginPage from './LoginPage.jsx'\n\nexport default LoginPage","import React from \"react\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport styles from \"./LoginPage.module.css\";\n\nexport default function LoginPage() {\n  // Dependency array ensures the effect runs when these values change.\n\n  return (\n    <section className={styles.section}>\n      <LoginForm />\n    </section>\n  );\n}\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","_objectSpread","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","useToggle","initialValue","isOpen","setIsOpen","email","password","validateLogin","navigate","useNavigate","user","isLoggedIn","useAuth","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","closedEyeVisible","toggleClosedEyeVisible","isFormValid","trim","_jsxs","cont","linkContainer","Link","to","navLinkTitle","login","onSubmit","async","e","preventDefault","logIn","unwrap","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","error","prevFields","form","inputsCont","inputWrapper","target","inputError","VscEye","onClick","console","log","size","eyeIcon","VscEyeClosed","buttonsContainer","Button","disabled","errorCont","handleClick","LoginForm"],"sourceRoot":""}