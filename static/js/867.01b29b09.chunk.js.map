{"version":3,"file":"static/js/867.01b29b09.chunk.js","mappings":"kJACA,SAAgB,MAAQ,qBAAqB,YAAc,2BAA2B,UAAY,0B,aCKnF,SAASA,EAAKC,GAazB,IAb0B,KAC5BC,EAAI,YACJC,EAAW,SACXC,EAAQ,QACRC,EAAU,GAAE,UACZC,EAAS,KACTC,EAAI,aACJC,EAAY,MACZC,EAAK,MACLC,EAAK,YACLC,EAAW,aACXC,EAAY,WACZC,GACDZ,EACC,OACEa,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEN,MAAOA,GAAS,QAAUH,UAAWU,EAAOC,eAAeC,UACvEJ,EAAAA,EAAAA,KAAA,SACEF,aAAcA,GAAgB,MAC9BG,MAAO,CAAEJ,YAAaA,GAAe,OACrCQ,SAAUX,EACVD,KAAMA,GAAQ,GACdD,WAAWc,EAAAA,EAAAA,GACTJ,EAAOK,MACPf,EACY,WAAZD,EAAuBW,EAAOM,YAAcN,EAAOK,OAErDnB,KAAMA,GAAQ,OACdC,YAAaA,GAAe,GAC5BC,SAAUA,IAAY,EACtBM,MAAOA,GAAS,GAChBa,OAAQV,KAIhB,C,gDCtCA,MAkBA,EAlBuB,WAAwB,IAAvBW,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtC,MAAOG,EAASC,IAAcC,EAAAA,EAAAA,UAC5BC,OAAOC,KAAKR,GAAcS,QAAO,CAACC,EAAKC,KACrCD,EAAIC,IAAO,EACJD,IACN,CAAC,IAON,MAAO,CACLN,UACAf,WANkBuB,GAAU,KAC5BP,GAAYQ,IAAI,IAAWA,EAAM,CAACD,IAAQ,KAAQ,EAOtD,C,gDChBA,MAkBA,EAlB0BE,CAACd,EAAce,KACvC,MAAOC,EAAQC,IAAaX,EAAAA,EAAAA,UAASN,IAC9BkB,EAAQC,IAAab,EAAAA,EAAAA,UAAS,CAAC,GAQtC,MAAO,CACLU,SACAC,YACAC,SACAE,eAVqBA,KACrB,MAAMC,EAAYN,EAAWC,GAE7B,OADAG,EAAUE,GAC+B,IAAlCd,OAAOC,KAAKa,GAAWnB,MAAY,EAQ3C,C,gDCfY,SAASoB,EAAUC,GAC9B,MAAOC,EAAQC,IAAanB,EAAAA,EAAAA,UAASiB,GAMrC,MAAO,CAACC,EAJR,WACIC,GAAWD,EACf,EAGJ,C,uJCVA,MAWA,EAXuBR,IACnB,MAAME,EAAS,CAAC,EAOhB,OANKF,EAAOU,QACRR,EAAOQ,MAAQ,qBAEdV,EAAOW,WACRT,EAAOS,SAAW,wBAEfT,CAAM,E,0CCPjB,SAAgB,KAAO,wBAAwB,KAAO,wBAAwB,cAAgB,iCAAiC,aAAe,gCAAgC,MAAQ,yBAAyB,WAAa,8BAA8B,aAAe,gCAAgC,WAAa,8BAA8B,QAAU,2BAA2B,UAAY,6BAA6B,MAAQ,yBAAyB,iBAAmB,oCAAoC,OAAS,0BAA0B,QAAU,4B,aCqLviB,QAjKA,WACE,MAAM,OAAEF,EAAM,UAAEC,EAAS,eAAEG,IAAmBN,EAAAA,EAAAA,GAC5C,CACEY,MAAO,GACPC,SAAU,IAEZC,GAGIC,GAAWC,EAAAA,EAAAA,OAEX,KAAEC,EAAI,WAAEC,IAAeC,EAAAA,EAAAA,MAEvB,QAAE7B,EAAO,WAAEf,IAAe6C,EAAAA,EAAAA,GAAelB,IAExCmB,EAAcC,IAAmB9B,EAAAA,EAAAA,UAAS,IAC3C+B,GAAWC,EAAAA,EAAAA,OAEV5D,EAAM6D,IAAWjC,EAAAA,EAAAA,UAAS,aAC1BkC,EAAYC,IAAoBnB,EAAAA,EAAAA,IAAU,IAC1CoB,EAAkBC,IAA0BrB,EAAAA,EAAAA,IAAU,GA8BvDsB,EAAsC,KAAxB5B,EAAOU,MAAMmB,QAAiB7B,EAAOW,SAASzB,QAAU,EAE5E,OACE4C,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAOuD,KAAKrD,SAAA,EAC1BoD,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAOwD,cAActD,SAAA,EACnCJ,EAAAA,EAAAA,KAAC2D,EAAAA,GAAI,CAACC,GAAG,iBAAiBpE,UAAWU,EAAO2D,aAAazD,SAAC,kBAI1DJ,EAAAA,EAAAA,KAAA,KAAGR,UAAWU,EAAO4D,MAAM1D,SAAC,eAG9BoD,EAAAA,EAAAA,MAAA,QAAMO,SAxCWC,UAGnB,GAFAC,EAAEC,iBAEGpC,IAEL,UACQiB,GAASoB,EAAAA,EAAAA,IAAMzC,IAAS0C,SAG9BC,EAAAA,GAAMC,QAAQ,oBAAqB,CACjCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUhE,GAEd,CAAE,MAAOiE,GACPnD,GAAWoD,IAAU,IAChBA,EACHlC,aAAcC,EACZ,wDAGN,GAegCtD,UAAWU,EAAO8E,KAAK5E,SAAA,EACnDoD,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAO+E,WAAW7E,SAAA,EAChCoD,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAOC,eAAeC,SAAA,EACpCJ,EAAAA,EAAAA,KAAA,OAAKR,UAAWU,EAAOgF,aAAa9E,UAClCJ,EAAAA,EAAAA,KAACd,EAAAA,EAAK,CACJY,aAAa,KACbD,YAAY,OACZF,MAAM,OACNP,KAAK,QACLQ,MAAO8B,EAAOU,MACd1C,aAAeuE,IACbtC,EAAU,IAAKD,EAAQU,MAAO6B,EAAEkB,OAAOvF,OAAQ,EAEjDG,WAAYA,EAAW,SACvBV,YAAY,mBACZC,UAAU,MAGbwB,EAAQsB,QAAUV,EAAOU,QACxBpC,EAAAA,EAAAA,KAAA,KAAGR,UAAWU,EAAOkF,WAAWhF,SAAC,iBAIrCoD,EAAAA,EAAAA,MAAA,OAAKtD,OAAQA,EAAOC,eAAeC,SAAA,EACjCoD,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAOgF,aAAa9E,SAAA,CACjC8C,IACClD,EAAAA,EAAAA,KAACqF,EAAAA,IAAM,CACLC,QAASA,KACPnC,IACAE,IACAJ,EAAQ,QACRsC,QAAQC,IAAI,QAAQ,EAEtBC,KAAK,OACLjG,UAAWU,EAAOwF,UAGrBtC,IACCpD,EAAAA,EAAAA,KAAC2F,EAAAA,IAAY,CACXL,QAASA,KACPnC,IACAE,IACAJ,EAAQ,WAAW,EAErBwC,KAAK,OACLjG,UAAWU,EAAOwF,WAGtB1F,EAAAA,EAAAA,KAACd,EAAAA,EAAK,CACJY,aAAa,KACbD,YAAY,OACZF,MAAM,OACNP,KAAMA,EACNQ,MAAO8B,EAAOW,SACd3C,aAAeuE,IACbtC,EAAU,IAAKD,EAAQW,SAAU4B,EAAEkB,OAAOvF,OAAQ,EAEpDG,WAAYA,EAAW,YACvBV,YAAY,WACZC,UAAU,OAGbwB,EAAQuB,UAAYX,EAAOW,SAASzB,OAAS,IAC5CZ,EAAAA,EAAAA,KAAA,KAAGR,UAAWU,EAAOkF,WAAWhF,SAAC,mDAOvCoD,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAO0F,iBAAiBxF,SAAA,CACrCyC,IAAgB7C,EAAAA,EAAAA,KAAA,KAAGR,UAAWU,EAAO4E,MAAM1E,SAAEyC,KAE9C7C,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACC,UAAWxC,EAAa/D,QAAQ,OAAOH,KAAK,SAAQgB,SAAC,aAKrD,OAATqC,IAAkBC,IACjBc,EAAAA,EAAAA,MAAA,OAAKhE,UAAWU,EAAO6F,UAAU3F,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,KAAGR,UAAWU,EAAO4E,MAAM1E,SAAC,0KAK5BJ,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CACLtG,QAAQ,OACRyG,YAAaA,KACXzD,EAAS,gBAAgB,EACzBnC,SAAC,mBAQjB,ECnLA,EAA0B,2BCC1B,QCKe,WAGb,OACEJ,EAAAA,EAAAA,KAAA,WAASR,UAAWU,EAAeE,UACjCJ,EAAAA,EAAAA,KAACiG,EAAS,KAGhB,C","sources":["webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/useToggle.js","hooks/validateLogin.js","webpack://my-react-app/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://my-react-app/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__0KQEs\",\"inputCenter\":\"Input_inputCenter__1T9Uh\",\"inputInfo\":\"Input_inputInfo__A3dUh\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n","import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue) {\r\n    const [isOpen, setIsOpen] = useState(initialValue);\r\n\r\n    function toggle() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return [isOpen, toggle];\r\n}\r\n","const validateLogin = (fields) => {\r\n    const errors = {};\r\n    if (!fields.email) {\r\n        errors.email = \"Email is required\";\r\n    }\r\n    if (!fields.password) {\r\n        errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n};\r\n\r\nexport default validateLogin;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__zXkzF\",\"cont\":\"LoginForm_cont__FcjY8\",\"linkContainer\":\"LoginForm_linkContainer__zFDRd\",\"navLinkTitle\":\"LoginForm_navLinkTitle__gjuEI\",\"login\":\"LoginForm_login__AHqfe\",\"inputsCont\":\"LoginForm_inputsCont__Wbah3\",\"inputWrapper\":\"LoginForm_inputWrapper__MiN+1\",\"inputError\":\"LoginForm_inputError__HJ5V0\",\"eyeIcon\":\"LoginForm_eyeIcon__hpVXl\",\"errorCont\":\"LoginForm_errorCont__8U6zH\",\"error\":\"LoginForm_error__0PtZr\",\"buttonsContainer\":\"LoginForm_buttonsContainer__kwztG\",\"button\":\"LoginForm_button__IQqNe\",\"navLink\":\"LoginForm_navLink__h9vaM\"};","import React, { useState } from \"react\";\r\nimport { logIn } from \"../../redux/auth/operationsAuth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateLogin from \"../../hooks/validateLogin\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n// import clsx from \"clsx\";\r\n\r\nimport { toast } from \"react-toastify\"; // Import toast and ToastContainer\r\nimport \"react-toastify/dist/ReactToastify.css\"; // Import styles\r\n\r\nimport styles from \"./LoginForm.module.css\";\r\n\r\nfunction LoginForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validateLogin\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { user, isLoggedIn } = useAuth();\r\n\r\n  const { touched, handleBlur } = useFormTouched(fields);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFields()) return;\r\n\r\n    try {\r\n      await dispatch(logIn(fields)).unwrap();\r\n\r\n      // Show success toast message after successful login\r\n      toast.success(\"Login successful!\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (error) {\r\n      setFields((prevFields) => ({\r\n        ...prevFields,\r\n        errorMessage: setErrorMessage(\r\n          \"You have entered an invalid username or password.\"\r\n        ),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const isFormValid = fields.email.trim() !== \"\" && fields.password.length >= 6;\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.linkContainer}>\r\n        <Link to=\"/auth/register\" className={styles.navLinkTitle}>\r\n          Registration\r\n        </Link>\r\n\r\n        <p className={styles.login}>Log In</p>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <div className={styles.inputsCont}>\r\n          <div className={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n              <Input\r\n                autoComplete=\"on\"\r\n                paddingLeft=\"18px\"\r\n                width=\"100%\"\r\n                type=\"email\"\r\n                value={fields.email}\r\n                handleChange={(e) => {\r\n                  setFields({ ...fields, email: e.target.value });\r\n                }}\r\n                handleBlur={handleBlur(\"email\")}\r\n                placeholder=\"Enter your email\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            {touched.email && !fields.email && (\r\n              <p className={styles.inputError}>Required</p>\r\n            )}\r\n          </div>\r\n\r\n          <div styles={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n              {eyeVisible && (\r\n                <VscEye\r\n                  onClick={() => {\r\n                    toggleEyeVisible();\r\n                    toggleClosedEyeVisible();\r\n                    setType(\"text\");\r\n                    console.log(\"click\");\r\n                  }}\r\n                  size=\"24px\"\r\n                  className={styles.eyeIcon}\r\n                />\r\n              )}\r\n              {closedEyeVisible && (\r\n                <VscEyeClosed\r\n                  onClick={() => {\r\n                    toggleEyeVisible();\r\n                    toggleClosedEyeVisible();\r\n                    setType(\"password\");\r\n                  }}\r\n                  size=\"24px\"\r\n                  className={styles.eyeIcon}\r\n                />\r\n              )}\r\n              <Input\r\n                autoComplete=\"on\"\r\n                paddingLeft=\"14px\"\r\n                width=\"100%\"\r\n                type={type}\r\n                value={fields.password}\r\n                handleChange={(e) => {\r\n                  setFields({ ...fields, password: e.target.value });\r\n                }}\r\n                handleBlur={handleBlur(\"password\")}\r\n                placeholder=\"Password\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            {touched.password && fields.password.length < 6 && (\r\n              <p className={styles.inputError}>\r\n                Password must be at least 6 characters!\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.buttonsContainer}>\r\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n\r\n          <Button disabled={!isFormValid} variant=\"auth\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </div>\r\n\r\n        {user !== null && !isLoggedIn && (\r\n          <div className={styles.errorCont}>\r\n            <p className={styles.error}>\r\n              It seems that your authorisation token expired for security resons\r\n              or your email is not verified! Please click Login button or Verify\r\n              button if email not verified !\r\n            </p>\r\n            <Button\r\n              variant=\"auth\"\r\n              handleClick={() => {\r\n                navigate(\"/verify-email\");\r\n              }}>\r\n              Verify\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__2KVTe\"};","import LoginPage from './LoginPage.jsx'\r\n\r\nexport default LoginPage","import React from \"react\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styles from \"./LoginPage.module.css\";\r\n\r\nexport default function LoginPage() {\r\n  // Dependency array ensures the effect runs when these values change.\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <LoginForm />\r\n    </section>\r\n  );\r\n}\r\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","useToggle","initialValue","isOpen","setIsOpen","email","password","validateLogin","navigate","useNavigate","user","isLoggedIn","useAuth","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","closedEyeVisible","toggleClosedEyeVisible","isFormValid","trim","_jsxs","cont","linkContainer","Link","to","navLinkTitle","login","onSubmit","async","e","preventDefault","logIn","unwrap","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","error","prevFields","form","inputsCont","inputWrapper","target","inputError","VscEye","onClick","console","log","size","eyeIcon","VscEyeClosed","buttonsContainer","Button","disabled","errorCont","handleClick","LoginForm"],"sourceRoot":""}