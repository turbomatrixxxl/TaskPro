{"version":3,"file":"static/js/548.9ddb7661.chunk.js","mappings":"yMACA,SAAgB,UAAY,4CAA4C,MAAQ,wCAAwC,QAAU,0CAA0C,OAAS,yCAAyC,SAAW,2CAA2C,SAAW,2CAA2C,UAAY,4CAA4C,KAAO,wC,aCOzY,MAmGA,EAnGwBA,KAAO,IAADC,EAC5B,MAAM,KAAEC,EAAI,WAAEC,EAAU,UAAEC,IAAcC,EAAAA,EAAAA,KAClCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,MAEJP,GAAkB,OAAJD,QAAI,IAAJA,GAAAA,EAAMS,SACtBH,EAAS,OAEV,CAACL,EAAYD,EAAMM,KAatBE,EAAAA,EAAAA,YAAU,KACJN,GACFQ,QAAQC,MAAM,SAAUT,KAEzB,CAACA,IAEJ,MAsBMU,EAAmB,QAAdb,EAAO,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMY,aAAK,IAAAb,EAAAA,EAAI,qBAE7B,OACEc,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAOC,UAAUC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAOI,MAAMF,SAAC,sCAC7BJ,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAOK,QAAQH,SAAA,CAAC,6CACe,KAC3CC,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAAOM,OAAOJ,SAAEL,QAErCM,EAAAA,EAAAA,KAAA,KACEJ,UAAWC,EAAOO,UAClBC,KAjCuBX,KAC3B,IAAKA,IAAUA,EAAMY,SAAS,KAE5B,OADAd,QAAQe,KAAK,wBAAyBb,GAC/B,0BAGT,MAAMc,EAAc,OAALd,QAAK,IAALA,OAAK,EAALA,EAAOe,MAAM,KAAK,GACjC,OAAQD,GACN,IAAK,YACH,MAAM,0CACR,IAAK,YACH,MAAM,yBACR,IAAK,cACL,IAAK,cACH,MAAM,wCACR,IAAK,aACH,MAAM,8BACR,QACE,MAAM,gBAANE,OAAuBF,KAejBG,CAAwB,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OAChCkB,OAAO,SACPC,IAAI,sBAAqBd,UACzBC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACC,QAAQ,OAAMhB,SAAC,iCAEzBC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CACLE,YAAaA,KAvDZlC,EAOLI,GAAS+B,EAAAA,EAAAA,IAA4B,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMY,QANrCN,EAAS,gBAyDP8B,KAAK,SACLH,QAAQ,OAAMhB,SAAC,8BAIhBf,GAAkC,kBAAdA,IACnBgB,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAOJ,MAAMM,SAAEf,KAG/BW,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOsB,SAASpB,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAOuB,SAASrB,SAAC,8DAI/BC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CACLC,QAAQ,OACRC,YAAaA,KACX5B,EAAS,gBACTW,SAAC,gBAILC,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAOuB,SAASrB,SAAC,sB","sources":["webpack://my-react-app/./src/pages/VerifyEmailPageComponent/VerifyEmailPageComponent.module.css?1cb8","pages/VerifyEmailPageComponent/VerifyEmailPageComponent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"VerifyEmailPageComponent_container__8IaQN\",\"title\":\"VerifyEmailPageComponent_title__NpOlo\",\"message\":\"VerifyEmailPageComponent_message__ndlL5\",\"strong\":\"VerifyEmailPageComponent_strong__t6Cd0\",\"infoCont\":\"VerifyEmailPageComponent_infoCont__5cAiE\",\"infoText\":\"VerifyEmailPageComponent_infoText__5kjyE\",\"emailLink\":\"VerifyEmailPageComponent_emailLink__Fmb8e\",\"link\":\"VerifyEmailPageComponent_link__Dnh7c\"};","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resendVerificationEmail } from \"../../redux/auth/operationsAuth\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../../components/commonComponents/Button\";\nimport styles from \"./VerifyEmailPageComponent.module.css\";\n\nconst VerifyEmailPage = () => {\n  const { user, isLoggedIn, errorAuth } = useAuth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Navigate to home if user is logged in or already verified\n    if (isLoggedIn || user?.verify) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, user, navigate]);\n\n  const handleResendVerificationEmail = () => {\n    if (!user) {\n      navigate(\"/auth/login\");\n      return;\n    }\n\n    // console.log(user);\n\n    dispatch(resendVerificationEmail(user?.email));\n  };\n\n  useEffect(() => {\n    if (errorAuth) {\n      console.error(\"Error:\", errorAuth);\n    }\n  }, [errorAuth]);\n\n  const getEmailProviderUrl = (email) => {\n    if (!email || !email.includes(\"@\")) {\n      console.warn(\"Invalid email format:\", email);\n      return \"https://mail.google.com\";\n    }\n\n    const domain = email?.split(\"@\")[1];\n    switch (domain) {\n      case \"gmail.com\":\n        return `https://mail.google.com/mail/u/0/#inbox`;\n      case \"yahoo.com\":\n        return `https://mail.yahoo.com`;\n      case \"outlook.com\":\n      case \"hotmail.com\":\n        return `https://outlook.live.com/mail/0/inbox`;\n      case \"icloud.com\":\n        return `https://www.icloud.com/mail`;\n      default:\n        return `https://mail.${domain}`;\n    }\n  };\n\n  const email = user?.email ?? \"your email address\";\n\n  return (\n    <section className={styles.container}>\n      <h2 className={styles.title}>Please verify your email address</h2>\n      <p className={styles.message}>\n        We sent a verification link to your email:{\" \"}\n        <strong className={styles.strong}>{email}</strong>\n      </p>\n      <a\n        className={styles.emailLink}\n        href={getEmailProviderUrl(user?.email)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <Button variant=\"auth\">Go to your email provider</Button>\n      </a>\n      <Button\n        handleClick={() => {\n          handleResendVerificationEmail();\n        }}\n        type=\"button\"\n        variant=\"auth\">\n        Resend Verification Email\n      </Button>\n\n      {errorAuth && typeof errorAuth === \"string\" && (\n        <p className={styles.error}>{errorAuth}</p>\n      )}\n\n      <div className={styles.infoCont}>\n        <p className={styles.infoText}>\n          If you've already verified your email, you can go to the\n        </p>\n\n        <Button\n          variant=\"auth\"\n          handleClick={() => {\n            navigate(\"/auth/login\");\n          }}>\n          Login page\n        </Button>\n\n        <p className={styles.infoText}>to sign in.</p>\n      </div>\n    </section>\n  );\n};\n\nexport default VerifyEmailPage;\n"],"names":["VerifyEmailPage","_user$email","user","isLoggedIn","errorAuth","useAuth","dispatch","useDispatch","navigate","useNavigate","useEffect","verify","console","error","email","_jsxs","className","styles","container","children","_jsx","title","message","strong","emailLink","href","includes","warn","domain","split","concat","getEmailProviderUrl","target","rel","Button","variant","handleClick","resendVerificationEmail","type","infoCont","infoText"],"sourceRoot":""}